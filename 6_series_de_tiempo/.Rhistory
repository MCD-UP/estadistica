gas = scan('http://verso.mat.uam.es/~joser.berrendero/datos/gas6677.dat')
plot(gas)
20+18+22
60/3
15+20+22
57/3
15+20+22
57/3
17+21+19
57/3
17+21+19
series <- c(17, 21, 19, 23, 18, 16, 20, 18, 22, 20, 15, 22)
series <- c(17, 21, 19, 23, 18, 16, 20, 18, 22, 20, 15, 22)
alfa <- 0.1
for i in 3:12{
if(i == 1){
series_est[i] <- series
}
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
}
for(i in 3:12){
if(i == 1){
series_est[i] <- series
}
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
}
series_est <- v()
series_est <- vector()
series_est[1] <- 1
series_est <- vector()
for(i in 2:12){
if(i == 1){
series_est[i] <- series
}
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
}
series_est <- vector()
for(i in 2:12){
if(i == 1){
series_est[i] <- series[i]
}
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
}
series_est <- vector()
for(i in 2:12){
browser()
if(i == 1){
series_est[i] <- series[i]
}
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
}
alfa <- 0.1
series_est <- vector()
for(i in 2:12){
if(i == 1){
series_est[i] <- series[i]
}
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
}
series_est <- vector()
for(i in 2:12){
if(i == 1){
series_est[i] <- series[i]
}
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
series_est[i] <- series[i]
}
series_est <- vector()
for(i in 1:12){
if(i == 1){
series_est[i] <- series[i]
}
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
series_est[i] <- series[i]
}
series_est <- vector()
for(i in 1:12){
if(i == 1){
series_est[i] <- series[i]
}
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
# series_est[i] <- series[i]
}
series_est <- vector()
for(i in 1:12){
if(i == 1){
series_est[i] <- series[i]
}else{
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
}
# series_est[i] <- series[i]
}
alfa <- 1
series_est <- vector()
for(i in 1:12){
if(i == 1){
series_est[i] <- series[i]
}else{
series_est[i] <- alfa*series[i-1] + (1-alfa)*series_est[i-1]
}
# series_est[i] <- series[i]
}
plot(series)
plot(series_est)
library(vars)
iinstall.packages(vars)
iinstall.packages("vars")
install.packages("vars")
data("Canada")
str(Canada)
library(vars)
data("Canada")
str(Canada)
plot(Canada[, "U"], main='Desempleo', xlab='Mes/Año', ylab='Tasa')
lines(rollmean(Canada[, "U"], 4), col="red", lwd=2)
lines(rollmean(Canada[, "U"], 4,align="right"), col="blue", lwd=2)
legend("bottomleft", c("Original", "Media móvil centrada",
"Media móvil no centrada"),
lwd=c(1,2,2), col=c("black", "red", "blue"))
grid()
# Transformación exponencial
plot(HoltWinters(gas.ts,beta=FALSE,gamma=FALSE))
gas = scan('http://verso.mat.uam.es/~joser.berrendero/datos/gas6677.dat')
plot(gas)
gas.ts = ts(gas, start = c(1966,1), frequency = 12)
print(gas.ts)
plot(gas.ts)
boxplot(gas.ts ~ cycle(gas.ts))
cycle(gas.ts)
# Transformación exponencial
plot(HoltWinters(gas.ts, beta = FALSE, gamma = FALSE))
# Descomposición de una serie de tiempo
gas.ts.desc = decompose(gas.ts)
plot(gas.ts.desc, xlab='Año')
plot(c(2.6, 3, 3.5, 3.8, 3.8, 3.7, 7.7, 3.7, 4, 4.3, 4.7, 4.8, 4.8, 5.1, 5.3, 5.7))
plot(c(2.6, 3, 3.5, 3.8, 3.8, 3.7, 3.7, 3.7, 4, 4.3, 4.7, 4.8, 4.8, 5.1, 5.3, 5.7))
4/3.875
#####
# Elimicación de la varianza
plot(log(gas.ts))
x = log(gas.ts)
#####
# Elimicación de la varianza
plot(log(gas.ts))
x = log(gas.ts)
# Eliminación de la tendencia
dif1.x = diff(x)
plot(dif1.x)
plot(x)
#####
# Elimicación de la varianza
plot(log(gas.ts))
x = log(gas.ts)
plot(x)
# Eliminación de la estacionalidad
dif12.dif1 = diff(dif1.x, lag = 12)
plot(dif12.dif1)
dat <- read.csv("./conjunto_de_datos/jus_mun_sp.csv")
View(dat)
dat <- read.csv("./conjunto_de_datos/conjunto_de_datos_anexos_anexo 1trimestral.csv")
View(dat)
dat <- read.csv("./datos_pib_trim.csv")
View(dat)
plot(dat$pib)
plot(dat$pib_desestacionalizada)
plot(dat$pib_desestacionalizada, type="n")
plot(dat$pib_desestacionalizada, type = "l")
plot(dat$pib, type = "l")
plot(dat$pib, type = "l")
plot(dat$pib_desestacionalizada, type = "l")
plot(dat$pib, type = "l")
plot(dat$pib_desestacionalizada, type = "l")
# Detectar la tendencia
# Eliminación de la estacionalidad
pib_tend <- diff(dat$pib, lag = 4)
plot(pib_tend, type = "l")
# Detectar la tendencia
# Eliminación de la estacionalidad
pib_tend <- diff(dat$pib, lag = 4)
# Línea de tendencia original
plot(dat$pib, type = "l")
plot(pib_tend, type = "l")
# Línea de tendencia original
plot(dat$pib_desestacionalizada, type = "l")
# Línea de tendencia original
plot(dat, type = "l")
# Detectar la tendencia
# Eliminación de la estacionalidad
pib_tend <- diff(dat$pib, lag = 4)
plot(pib_tend, type = "l")
# Detectar la tendencia
# Eliminación de la varianza
pib_tend <- log(dat$pib)
pib_tend
dat$pib
# Línea de tendencia original
plot(dat, type = "l")
# Línea de tendencia original
plot(dat, type = "l")
dat <- read.csv("./datos_pib_trim.csv")
# Línea de tendencia original
plot(dat, type = "l")
dat <- read.csv("./datos_pib_trim.csv")
# Línea de tendencia original
plot(dat, type = "l")
# Línea de tendencia original
plot(dat$pib, type = "l")
pib.ts <- ts(dat$pib, start = c(2015, 1), frequency = 1)
plot(pib.ts)
pib.ts <- ts(dat$pib, start = c(2015, 1), frequency = 4)
plot(pib.ts)
dat <- read.csv("./datos_pib_trim.csv")
# Línea de tendencia original
pib.ts <- ts(dat$pib, start = c(2015, 1), frequency = 4)
plot(pib.ts)
# Detectar la tendencia
# Eliminación de la varianza
pib_tend <- log(dat$pib)
# Detectar la tendencia
# Eliminación de la varianza
pib_tend <- log(pib.ts$pib)
# Línea de tendencia original
pib.ts <- ts(dat$pib, start = c(2015, 1), frequency = 4)
plot(pib.ts)
# Detectar la tendencia
# Eliminación de la varianza
pib_tend <- log(pib.ts$pib)
# Detectar la tendencia
# Eliminación de la varianza
pib_tend <- log(pib.ts)
plot(pib_tend)
# Eliminación de la estacionalidad
pib_tend <- diff(pib.ts, lag = 4)
plot(pib_tend, type = "l")
plot(pib.ts)
plot(pib_tend, type = "l")
# Eliminación de la estacionalidad
pib_tend <- diff(pib.ts, lag = 12)
plot(pib_tend, type = "l")
View(dat)
# Eliminación de la estacionalidad
pib_tend <- diff(pib.ts, lag = 20)
plot(pib_tend, type = "l")
# Eliminación de la estacionalidad
pib_tend <- diff(pib.ts, lag = 10)
plot(pib_tend, type = "l")
source('C:/Users/aguilars/Desktop/Desktop/Stuffs/Personal/Tareas MDSCI/Estadística/Clase 6/Tarea.R', encoding = 'UTF-8', echo=TRUE)
# Eliminación de la estacionalidad
pib_tend <- diff(pib.ts, lag = 12)
# Línea de tendencia original
pib.ts <- ts(dat$pib, start = c(2015, 1), frequency = 4)
plot(pib.ts)
dat <- read.csv("./datos_pib_trim.csv")
# Línea de tendencia original
pib.ts <- ts(dat$pib, start = c(2015, 1), frequency = 4)
plot(pib.ts)
birthstimeseriescomponents <- decompose(pib.ts)
pib.desc <- decompose(pib.ts)
plot(pib.desc)
plot(pib.ts)
# Detectar la tendencia
# Eliminación de la varianza
pib_tend <- log(pib.ts)
plot(pib_tend)
library("TTS")
install.packages("TTS")
# Línea de tendencia original
pib.ts <- ts(dat$pib, start = c(2015, 1), frequency = 4)
plot(pib.ts)
# Eliminación de la estacionalidad
pib_tend <- diff(pib.ts, lag = 12)
plot(pib_tend, type = "l")
# Eliminación de la tendencia
dif1.x = diff(pib.ts)
plot(dif1.x)
plot(pib.desc)
# Eliminación de la estacionalidad
dif12.dif1 = diff(dif1.x, lag = 12)
plot(dif12.dif1)
mean(5.49, 5.65, 5.75, 5.83, 5.89, 6.03, 5.77)
mean(5.49, 5.65, 5.75, 5.83, 5.89, 6.03)
mean(5.45, 5.62, 5.71, 5.76, 5.83, 5.97)
mean(5.49, 5.65, 5.75, 5.83, 5.89, 6.03)
# Detectar de la tendencia
# Remover estacionalidad
pib.tend <- SMA(pib.ts, n = 3)
# Detectar de la tendencia
# Remover estacionalidad
pib.tend <- TTS::SMA(pib.ts, n = 3)
# Detectar de la tendencia
# Remover estacionalidad
pib.tend <- TTR::SMA(pib.ts, n = 3)
plot(pib.tend)
# Detectar de la tendencia
# Remover estacionalidad
pib.tend <- TTR::SMA(pib.ts, n = 5)
plot(pib.tend)
plot(pib.ts)
plot(pib.desc)
plot(pib.tend)
# Explicación:
# La tendencia del Producto Interno Bruto en México es decresciente.
# La tendencia se detectó mediante un promedio móvil de 5 periodos.
# Incluso después de que se extrajo el componente de estacionalidad,
# se puede observar que en el último Q del 2017 la tendencia se levantó, así como para finales del último Q del 2019.
plot(pib.ts - pib.desc$seasonal)
pib.desc$seasonal
plot(pib.desc$seasonal)
# Detectar de la tendencia
# Remover estacionalidad
pib.tend <- TTR::SMA(pib.ts, n = 3) # Simple moving average
plot(pib.tend)
# Explicación:
# La tendencia del Producto Interno Bruto en México es decresciente.
# La tendencia se detectó mediante un promedio móvil de 5 periodos.
# Incluso después de que se extrajo el componente de estacionalidad,
# se puede observar que en el último Q del 2017 la tendencia se levantó, así como para finales del último Q del 2019.
plot(pib.ts - pib.desc$seasonal)
plot(dat$pib_desestacionalizada)
plot(dat$pib_desestacionalizada, type = "l")
# Explicación:
# La tendencia del Producto Interno Bruto en México es decresciente.
# La tendencia se detectó mediante un promedio móvil de 5 periodos.
# Incluso después de que se extrajo el componente de estacionalidad,
# se puede observar que en el último Q del 2017 la tendencia se levantó, así como para finales del último Q del 2019.
plot(pib.ts - pib.desc$seasonal)
plot(dat$pib_desestacionalizada, type = "l")
install.packages("forecast")
7*4
plot.forecast(forecast.HoltWinters(pib.ts, h = 28))
plot(forecast.HoltWinters(pib.ts, h = 28))
plot(forecast::HoltWinters(pib.ts, h = 28))
forecast::forecast(pib.ts)
# Predicciones para los próximos 7 años
forecast::forecast(pib.ts, h = 24)
pib.forecast <- forecast::HoltWinters(pib.ts, h = 28)
pib.forecast <- forecast::forecast(pib.ts, h = 28)
plot(pib.forecast$upper)
plot(pib.forecast)
pib.hw <- HoltWinters(pib.ts)
plot(pib.hw)
forecast::holt(pib.ts, h = 5)
plot(forecast::holt(pib.ts, h = 5))
plot(forecast::holt(pib.ts, h = 25))
plot(pib.hw)
# Detección de la estacionalidad
# Remover tendencia
plot(pib.ts - pib.desc$trend)
plot(pib.desc$seasonal)
7*4
# Modelo adecuado para hacer predicciones
# May be described by an additive model as the random fluctuations in the data
# are roughly constant in size over time.
pib.hw <- HoltWinters(pib.ts)
plot(pib.hw)
plot(pib.desc$seasonal)
dat <- read.csv("./datos_pib_trim.csv")
# Línea de tendencia original
pib.ts <- ts(dat$pib, start = c(2015, 1), frequency = 4)
plot(pib.ts)
# Cargar datos
dat <- read.csv("./datos_pib_trim.csv")
# Convertir a serie de tiempo
pib.ts <- ts(dat$pib, start = c(2015, 1), frequency = 4)
# Línea de tendencia original
plot(pib.ts)
# Detectar de la tendencia
# Remover estacionalidad
pib.tend <- TTR::SMA(pib.ts, n = 3) # Simple moving average
pib.tend
plot(pib.tend)
# Descomposición
pib.desc <- decompose(pib.ts)
# Estacionalidad
pib.desc$seasonal
plot(pib.desc$seasonal)
# Modelo
pib.hw <- HoltWinters(pib.ts)
plot(pib.hw)
# Predicciones para los próximos 7 años
pib.forecast <- forecast::holt(pib.ts, h = 28) # 7*24 = 28 (7 años * 4 Qs = 28 Qs)
plot(pib.hw)
# Predicciones para los próximos 7 años
pib.forecast <- forecast::holt(pib.ts, h = 28) # 7*24 = 28 (7 años * 4 Qs = 28 Qs)
plot(pib.hw)
plot(pib.forecast)
# Predicciones para los próximos 7 años
pib.forecast <- forecast::holt(pib.ts, h = 28) # 7*24 = 28 (7 años * 4 Qs = 28 Qs)
plot(pib.forecast)
